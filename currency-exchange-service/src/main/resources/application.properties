spring.application.name=currency-exchange
server.port=8000
spring.config.import=optional:configserver:http://localhost:8888
#For H2, use >> localhost:8000/h2-console
spring.jpa.show-sql=true
spring.datasource.url=jdbc:h2:mem:testdb
spring.h2.console.enabled=true
#To defer creating data before DB is created
spring.jpa.defer-datasource-initialization=true

#For Naming Service
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
#>>> not needed >>>> eureka.instance.prefer-ip-address=true
#eureka.client.registerWithEureka=true
#eureka.client.fetchRegistry=true

#For circuit breaker
resilience4j.retry.instances.sample-api.maxAttempts=5
resilience4j.retry.instances.sample-api.waitDuration=2s

#each subsequent retry will increase i.e. 1st retry will take 2s -> 2nd retry will take 2.5s -> 3rd retry will take 3s...
resilience4j.retry.instances.sample-api.enableExponentialBackoff=true

#For RateLimiter -> limitForPeriod we are saying just allow 2 requests and limitRefreshPeriod -> every 10 sec
#2 requests every 10s
resilience4j.ratelimiter.instances.sample-api.limitForPeriod=2
resilience4j.ratelimiter.instances.sample-api.limitRefreshPeriod=10s

#Bulkhead
resilience4j.bulkhead.instances.sample-api.maxConcurrentCalls=10

#configure sampling 1.0 -> 100% tracing, 0.1 -> 10% tracing, 0.05 -> 5% tracing
#management.tracing.sampling.probability=1.0
#zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
#spring.zipkin.baseurl=http://localhost:9411/
#logging.pattern.level="trace_id=%mdc{traceId} span_id=%mdc{spanId} trace_flags=%mdc{traceFlags} %p"
#Expose all endpoints via prometheus
#management.endpoints.web.exposure.include=*